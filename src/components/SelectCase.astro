---
import { tCase, Event } from "../source/main.mts";
const { iCase } = Astro.props;
const backgroundColor = `hsl(${iCase.likelihoodOfSuccess * 117}, 100%, 70%)`;
const hoverBackgroundColor = `hsl(${iCase.likelihoodOfSuccess * 117}, 60%, 50%)`;
---

<html>
    <head>
        <style>
            .center {
                max-width: fit-content;
                margin-left: auto;
                margin-right: auto;
                text-align: center;
            }
            .container {
                display: flex;
                justify-content: center;
                align-items: center;
                gap: 2rem;
            }
            .main {
                padding: 1rem;
                margin: 2rem 10rem;
                border-radius: 5rem;
            }
            .textBlob {
                padding-left: 2rem;
            }
            .democrat {
                color: rgb(40, 53, 90);
            }
            .republican {
                color: rgb(155, 72, 72);
            }
            button {
                font-size: 3.5rem;
                border: 2px solid black;
                border-radius: 2rem;
                transition: background-color 0.3s ease-in-out;
            }
            .dynamic-button {
                background-color: var(--button-bg);
            }
            .dynamic-button:hover {
                background-color: var(--button-hover-bg);
            }
            ::backdrop {
                background-image: linear-gradient(
                  45deg,
                  magenta,
                  rebeccapurple,
                  dodgerblue,
                  green
                );
                opacity: 0.75;
            }
        </style>
    </head>
    <body>
        <button id={`show_button-${iCase.name}`} 
                class="center dynamic-button" 
                style={`--button-bg: ${backgroundColor}; --button-hover-bg: ${hoverBackgroundColor};`}>
            {iCase.name}
        </button>

        <!-- Dialog Content -->
        <dialog id={`dialog-${iCase.name}`} >
            <div class="main" style={`background-color: ${backgroundColor}`}>
                <h2 class="center">{iCase.name}</h2>
                <h4 class="center">
                    Filed on {iCase.dateFiled.toLocaleDateString()} in the court of 
                    <p class={iCase.party ? "democrat" : "republican"}>{iCase.judge}</p>
                    ({iCase.party ? "Democrat" : "Republican"}, appointed by {iCase.appointee})
                </h4>
                <div class="container">
                    <div class="textBlob">
                        <p class="center">{iCase.summary}</p>
                    </div>
                    <p>Likelihood of Success: {iCase.likelihoodOfSuccess * 100}%</p>
                </div>
                <ol>
                    {iCase.events.map((event: Event) => (
                        <li>{event.text} (Date: {event.date.toLocaleDateString()})</li>
                    ))}
                </ol>
            </div>
            <button class="center" id={`close_button-${iCase.name}`}>Close</button>
        </dialog>
        
        <script define:vars={{iCase}}>
            console.log(iCase);
            const showButton = document.getElementById(`show_button-${iCase.name}`);
            const closeButton = document.getElementById(`close_button-${iCase.name}`);
            const dialog = document.getElementById(`dialog-${iCase.name}`);

            if(showButton && closeButton && dialog){
                showButton.addEventListener("click", () => {
                    dialog.showModal();
                });
                closeButton.addEventListener("click", () => {
                    dialog.close();
                });
            }
        </script>
        <br>
    </body>
</html>
